apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thingsboard-http-transport
  namespace: thingsboard-qa
  uid: 2a80ce46-ec47-4ad4-8257-1021520379c5
  resourceVersion: '182442872'
  generation: 56
  creationTimestamp: '2024-12-05T14:52:06Z'
  labels:
    app.kubernetes.io/instance: thingsboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thingsboard
    app.kubernetes.io/version: 3.5.1
    helm.sh/chart: thingsboard-0.1.4-rc.51
    k10.kasten.io/actionType: snapshot
    k10.kasten.io/appName: thingsboard-qa
    k10.kasten.io/policyName: thingsboard-qa-backup
    k8slens-edit-resource-version: v1
  annotations:
    meta.helm.sh/release-name: thingsboard
    meta.helm.sh/release-namespace: thingsboard-qa
  selfLink: >-
    /apis/apps/v1/namespaces/thingsboard-qa/statefulsets/thingsboard-http-transport
status:
  observedGeneration: 56
  replicas: 1
  readyReplicas: 1
  currentReplicas: 1
  updatedReplicas: 1
  currentRevision: thingsboard-http-transport-df578b66d
  updateRevision: thingsboard-http-transport-df578b66d
  collisionCount: 0
  availableReplicas: 1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: thingsboard-http
      app.kubernetes.io/name: thingsboard-http
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: thingsboard-http
        app.kubernetes.io/name: thingsboard-http
      annotations:
        kubectl.kubernetes.io/restartedAt: '2025-07-30T11:57:11.311Z'
    spec:
      volumes:
        - name: thingsboard-http-transport-config
          configMap:
            name: thingsboard-http-transport-config
            items:
              - key: conf
                path: tb-http-transport.conf
              - key: logback
                path: logback.xml
            defaultMode: 420
        - name: thingsboard-node-logs
          emptyDir: {}
      containers:
        - name: thingsboard
          image: docker.io/thingsboard/tb-pe-http-transport:4.0.1PE
          ports:
            - name: http
              containerPort: 8082
              protocol: TCP
          env:
            - name: TB_SERVICE_ID
              value: tb-http-transport
            - name: TB_QUEUE_TYPE
              value: kafka
            - name: HTTP_BIND_ADDRESS
              value: 0.0.0.0
            - name: HTTP_BIND_PORT
              value: '8082'
            - name: HTTP_REQUEST_TIMEOUT
              value: '10000'
            - name: TB_KAFKA_SERVERS
              value: thingsboard-kafka:9092
            - name: TB_QUEUE_KAFKA_REPLICATION_FACTOR
              value: '1'
            - name: TB_QUEUE_KAFKA_PARTITIONS
              value: '10'
          resources: {}
          volumeMounts:
            - name: thingsboard-http-transport-config
              mountPath: /config
          livenessProbe:
            tcpSocket:
              port: 8082
            initialDelaySeconds: 120
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 8082
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: thingsboard
      serviceAccount: thingsboard
      securityContext: {}
      schedulerName: default-scheduler
  serviceName: tb-http-transport
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
